<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnPrint.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>